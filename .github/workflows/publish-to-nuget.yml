name: Publish NuGet Package

on:
  push:
    tags:
      - v[1-9]+.[0-9]+.[0-9]+
      - v[1-9]+.[0-9]+.[0-9]+-*

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate & extract version
        id: version
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          if ! [[ "$TAG" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)(-[0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?$ ]]; then
            echo "❌ Invalid tag format: $TAG"
            exit 1
          fi
          VERSION="${TAG#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "✔ Version = $VERSION"

      - name: Setup .NET (8.0 and 9.0)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --configuration Release --verbosity normal --logger "console;verbosity=detailed"

      - name: Pack project
        run: dotnet pack --configuration Release --no-build --output ./nupkgs /p:Version=${{ steps.version.outputs.version }}

      - name: Publish to NuGet.org
        run: |
          for package in ./nupkgs/*.nupkg; do
            echo "Publishing $package"
            dotnet nuget push "$package" \
              --source "https://api.nuget.org/v3/index.json" \
              --api-key ${{ secrets.NUGET_API_KEY }} \
              --skip-duplicate
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ./nupkgs/*.nupkg

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./nupkgs/*.nupkg
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref, '-') }}
