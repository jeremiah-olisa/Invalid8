on:
  push:
    tags:
      - v[1-9]+.[0-9]+.[0-9]+

# TODO: Remove the permissions and use a scoped token later
permissions:
  contents: write

env:
  DOTNET_VERSION: '8.0.101'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}

      - name: Ensure workflow triggered by tag
        if: startsWith(github.ref, 'refs/tags/') == false
        run: |
          echo "❌ This workflow must be triggered by a Git tag (vX.Y.Z)"
          exit 1


      - name: Validate & extract version
        id: version
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          if ! [[ "$TAG" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)(-[0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?$ ]]; then
            echo "❌ Invalid tag format: $TAG"
            exit 1
          fi
          VERSION="${TAG#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "✔ Publishing version $VERSION"

      
      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-

      - run: dotnet restore
      - run: dotnet build --configuration Release --no-restore
      - run: dotnet test --configuration Release --no-build --verbosity normal
      - run: dotnet pack --configuration Release --no-build --output ./nupkgs /p:Version=${{ steps.version.outputs.version }}

      - run: |
          for package in ./nupkgs/*.nupkg; do
            echo "Publishing $package to NuGet.org"
            dotnet nuget push "$package" \
              --source "https://api.nuget.org/v3/index.json" \
              --api-key ${{ secrets.NUGET_API_KEY }} \
              --skip-duplicate
          done

    
      - uses: softprops/action-gh-release@v1
        with:
          files: ./nupkgs/*.nupkg
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref, '-') }}
#          env:
#            GITHUB_TOKEN: ${{ secrets.GH_PAT }}
